#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Groops
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Groops_db")]
	public partial class DataClassesContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGroopsRoom(GroopsRoom instance);
    partial void UpdateGroopsRoom(GroopsRoom instance);
    partial void DeleteGroopsRoom(GroopsRoom instance);
    partial void InsertGroopsMessages(GroopsMessages instance);
    partial void UpdateGroopsMessages(GroopsMessages instance);
    partial void DeleteGroopsMessages(GroopsMessages instance);
    partial void InsertGroopsUser(GroopsUser instance);
    partial void UpdateGroopsUser(GroopsUser instance);
    partial void DeleteGroopsUser(GroopsUser instance);
    #endregion
		
		public DataClassesContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Groops_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GroopsRoom> GroopsRooms
		{
			get
			{
				return this.GetTable<GroopsRoom>();
			}
		}
		
		public System.Data.Linq.Table<GroopsMessages> GroopsMessages
		{
			get
			{
				return this.GetTable<GroopsMessages>();
			}
		}
		
		public System.Data.Linq.Table<GroopsUser> GroopsUsers
		{
			get
			{
				return this.GetTable<GroopsUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class GroopsRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.Guid _CreatorUserId;
		
		private EntitySet<GroopsMessages> _Messages;
		
		private EntitySet<GroopsUser> _Users;
		
		private EntityRef<GroopsUser> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorUserIdChanging(System.Guid value);
    partial void OnCreatorUserIdChanged();
    #endregion
		
		public GroopsRoom()
		{
			this._Messages = new EntitySet<GroopsMessages>(new Action<GroopsMessages>(this.attach_Messages), new Action<GroopsMessages>(this.detach_Messages));
			this._Users = new EntitySet<GroopsUser>(new Action<GroopsUser>(this.attach_Users), new Action<GroopsUser>(this.detach_Users));
			this._User = default(EntityRef<GroopsUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorUserId
		{
			get
			{
				return this._CreatorUserId;
			}
			set
			{
				if ((this._CreatorUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserId = value;
					this.SendPropertyChanged("CreatorUserId");
					this.OnCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Message", Storage="_Messages", ThisKey="ID", OtherKey="RoomId")]
		public EntitySet<GroopsMessages> GroopsMessages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_User", Storage="_Users", ThisKey="ID", OtherKey="RoomID")]
		public EntitySet<GroopsUser> GroopsUsers
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Room", Storage="_User", ThisKey="CreatorUserId", OtherKey="ID", IsForeignKey=true)]
		public GroopsUser User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				GroopsUser previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroopsRooms.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroopsRooms.Add(this);
						this._CreatorUserId = value.ID;
					}
					else
					{
						this._CreatorUserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages(GroopsMessages entity)
		{
			this.SendPropertyChanging();
			entity.GroopsRoom = this;
		}
		
		private void detach_Messages(GroopsMessages entity)
		{
			this.SendPropertyChanging();
			entity.GroopsRoom = null;
		}
		
		private void attach_Users(GroopsUser entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Users(GroopsUser entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class GroopsMessages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Content;
		
		private System.DateTime _Created;
		
		private System.Guid _UserId;
		
		private System.Nullable<System.Guid> _RoomId;
		
		private EntityRef<GroopsRoom> _Room;
		
		private EntityRef<GroopsUser> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoomIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoomIdChanged();
    #endregion
		
		public GroopsMessages()
		{
			this._Room = default(EntityRef<GroopsRoom>);
			this._User = default(EntityRef<GroopsUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Message", Storage="_Room", ThisKey="RoomId", OtherKey="ID", IsForeignKey=true)]
		public GroopsRoom GroopsRoom
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				GroopsRoom previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.GroopsMessages.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.GroopsMessages.Add(this);
						this._RoomId = value.ID;
					}
					else
					{
						this._RoomId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GroopsRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public GroopsUser GroopsUser
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				GroopsUser previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroopsMessages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroopsMessages.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("GroopsUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class GroopsUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Twitter;
		
		private System.Nullable<System.Guid> _RoomID;
		
		private EntitySet<GroopsRoom> _Rooms;
		
		private EntitySet<GroopsMessages> _Messages;
		
		private EntityRef<GroopsRoom> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnRoomIDChanging(System.Nullable<System.Guid> value);
    partial void OnRoomIDChanged();
    #endregion
		
		public GroopsUser()
		{
			this._Rooms = new EntitySet<GroopsRoom>(new Action<GroopsRoom>(this.attach_Rooms), new Action<GroopsRoom>(this.detach_Rooms));
			this._Messages = new EntitySet<GroopsMessages>(new Action<GroopsMessages>(this.attach_Messages), new Action<GroopsMessages>(this.detach_Messages));
			this._Room = default(EntityRef<GroopsRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(50)")]
		public string Twitter
		{
			get
			{
				return this._Twitter;
			}
			set
			{
				if ((this._Twitter != value))
				{
					this.OnTwitterChanging(value);
					this.SendPropertyChanging();
					this._Twitter = value;
					this.SendPropertyChanged("Twitter");
					this.OnTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Room", Storage="_Rooms", ThisKey="ID", OtherKey="CreatorUserId")]
		public EntitySet<GroopsRoom> GroopsRooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<GroopsMessages> GroopsMessages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_User", Storage="_Room", ThisKey="RoomID", OtherKey="ID", IsForeignKey=true)]
		public GroopsRoom Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				GroopsRoom previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.GroopsUsers.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.GroopsUsers.Add(this);
						this._RoomID = value.ID;
					}
					else
					{
						this._RoomID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(GroopsRoom entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Rooms(GroopsRoom entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages(GroopsMessages entity)
		{
			this.SendPropertyChanging();
			entity.GroopsUser = this;
		}
		
		private void detach_Messages(GroopsMessages entity)
		{
			this.SendPropertyChanging();
			entity.GroopsUser = null;
		}
	}
}
#pragma warning restore 1591
